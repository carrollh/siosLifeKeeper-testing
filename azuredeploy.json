{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
  "imagePublisher": {
      "type": "string",
      "defaultValue": "RedHat",
      "allowedValues": [
        "RedHat",
        "Suse",
        "openlogic"
      ],
      "metadata": {
        "description": "The publisher for the Linux image you want to deploy. Must match offer and sku."
      }
    },
  "imageOffer": {
      "type": "string",
      "defaultValue": "RHEL",
      "allowedValues": [
        "RHEL",
        "SLES",
        "CentOS"
      ],
      "metadata": {
        "description": "The offer for the Linux image you want to deploy. Must match publisher and sku."
      }
    },
  "imageSKU": {
      "type": "string",
      "defaultValue": "7.7",
      "allowedValues": [
        "7.7",
        "11-SP4",
        "12",
        "12-SP1",
        "6.8",
        "7.0",
        "7.2",
        "7.2n"
      ],
      "metadata": {
        "description": "The offer for the Linux image you want to deploy. Must match publisher and offer."
      }
    },
    "newStorageAccountName": {
      "type": "string",
      "defaultValue": "lifekeeper",
      "metadata": {
        "description": "Storage Account to create for the disks"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "siosadmin",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "SIOS!5105",
      "metadata": {
        "description": "Admin password"
      }
    },
    "scaleNumber": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of Zookeper nodes to provision"
      }
    }
  },
  "variables": {
  "location": "[resourceGroup().location]",
    "availabilitySetName": "lifekeeperAS",
    "virtualNetworkName": "lifekeeperVNET",
    "vnetAddressPrefix": "10.0.0.0/16",
    "publicIPAddressType": "Dynamic",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/24",
    "nicName": "lifekeeperNIC",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', variables('subnet1Name'))]",
    "storageAccountType": "Standard_LRS",
    "vmName": "lifekeeperVM",
    "vmSize": "Standard_A1",
    "customScriptFilePath": "https://raw.githubusercontent.com/carrollh/siosLifeKeeper-testing/master/lifekeeper.sh",
    "customScriptCommandToExecute": "sh lifekeeper.sh ",
    "vmExtensionName": "lifekeeperExtension"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {}
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat('publicIP', copyIndex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "IP address loop",
        "count": "[parameters('scaleNumber')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyIndex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "NIC loop",
        "count": "[parameters('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', 'publicIP', copyIndex())]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('10.0.0.', copyIndex(4))]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('publicIP', copyIndex()))]"
              },
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyIndex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "VM loop",
        "count": "[parameters('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(variables('vmName'), copyIndex())]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/', 'osdisk', copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyIndex(),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "copy": {
        "name": "Script Extension Loop",
        "count": "[parameters('scaleNumber')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "[variables('customScriptFilePath')]"
          ],
          "commandToExecute": "[concat(variables('customScriptCommandToExecute'), copyIndex())]"
        }
      }
    }
  ]
}
